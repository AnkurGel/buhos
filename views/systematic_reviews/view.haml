.heading=t_systematic_review_title(@revision[:nombre],:View)
%ul.breadcrumb
  %li
    %a{:href=>url("/reviews")}=t(:Systematic_reviews)
  %li.active=@revision[:nombre]

%div.list-group
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Id)
    %span{ :name=>"nombre"}=@revision[:id]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Name)
    %span{ :name=>"nombre"}=@revision[:nombre]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Description)
    =@revision[:descripcion]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Date_start)
    %span{ :name=>"fecha_inicio"}=@revision[:fecha_inicio]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Objectives)
    =@revision[:objetivos] ? @revision[:objetivos].split("\n").join("<br/>") : '--'
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Start_year)
    %span{ :name=>"agno_inicio"}=@revision[:agno_inicio]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:End_year)
    %span{ :name=>"agno_termino"}=@revision[:agno_termino]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Keywords)
    %span{ :name=>"palabras_claves"}=@revision[:palabras_claves]
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Group)
    %span=@revision.group_name
  %div{:class=>"list-group-item"}
    %span{:class=>"titulo"}=t(:Stage)
    %span=t(get_stage_name(@revision[:etapa]))
  -if !@revision.grupo.nil?
    %div{:class=>"list-group-item"}
      %span{:class=>"titulo"}=t(:Administrator)
      %span=@revision.administrador_nombre
  %div{:class=>"list-group-item"}
    %h4{:class=>"list-group-item-heading"}=t(:Taxonomy)
    %ul
      - @taxonomy_categories.each_pair do |group, categories|
        %li
          %em="#{t("sr_taxonomy.#{group}")}:"
          =categories.map {|v| t("sr_taxonomy_category.#{v[:cat_name]}")}. join(", ")
  %div{:class=>"list-group-item"}
    %h4{:class=>"list-group-item-heading"}=t(:Actions)
    %p=partial(:review_buttons, :locals=>{:r=>@revision})